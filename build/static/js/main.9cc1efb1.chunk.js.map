{"version":3,"sources":["components/login/Login.js","components/login/Signup.js","components/gameOver/GameOver.js","components/questions/TypeOne.js","components/questions/TypeTwo.js","components/questions/SavedQuestion.js","components/Home/Game.js","components/Home/First.js","components/navigation/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Login","setPlayer","useState","name","setName","password","setPassword","isLogged","setLogged","login","a","axios","post","data","Cookies","set","accessToken","refreshToken","score","correct","mistakes","id","to","onChange","e","target","value","type","placeholder","onClick","Signup","props","isSigned","setSigned","action","then","result","catch","err","console","log","GameOver","currentPlayer","setTimer","setCount","setIncorrectCount","setQuestionCount","leaderBoard","setLeaderBoard","isPosted","setPosted","startNewGame","setstartNewGame","getLeaderboard","get","useEffect","postUser","user","map","i","correctText","inCorrect","getNewKey","Math","floor","random","rateQuestion","rate","question","setRated","template","column","rating","ratingCounter","option1","countries","country","option2","option3","option4","getButtonList","buttonList","push","TypeOne","buttons","updateCounter","updateCounterIncorrect","setQuestionType","setCounter","setAnswer","stop","undefined","setQuestion","rated","next","showNext","getTypeOneQuestion","buttonArray","nextButton","className","askOn","TypeTwo","showButton","setButton","getTypeTwoQuestion","patch","SavedQuestion","getSavedQuestions","Home","player","questionType","count","incorrectCount","timer","timerState","showTimer","text","setText","questionCount","callback","delay","savedCallback","useRef","current","tick","setInterval","clearInterval","useInterval","num","currentQuestion","correctAnswer","number","First","toLogin","setToLogin","toSignUp","setToSignUp","Navbar","logout","refToken","remove","exact","path","getNewToken","token","interceptors","response","use","error","status","originalRequest","config","expires","originalResponse","request","headers","Authorization","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9cc1efb1.chunk.js","sourcesContent":["import { Redirect } from \"react-router\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\n// add route for sign up,\r\n\r\nfunction Login({ setPlayer }) {\r\n  const [name, setName] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [isLogged, setLogged] = useState(false);\r\n\r\n  const login = async () => {\r\n    const { data } = await axios.post(\"/user/login\", {\r\n      name,\r\n      password,\r\n    });\r\n    Cookies.set(\"token\", data.accessToken);\r\n    Cookies.set(\"refreshToken\", data.refreshToken);\r\n    setPlayer({\r\n      name,\r\n      score: 0,\r\n      correct: 0,\r\n      mistakes: 0,\r\n    });\r\n    setLogged(true);\r\n  };\r\n\r\n  return (\r\n    <div id=\"Login\">\r\n      {isLogged && <Redirect to=\"/game\"></Redirect>}\r\n      <h1 id=\"Login-Header\">Login page</h1>\r\n      <h3>Enter your username to login</h3>\r\n\r\n      <input\r\n        onChange={(e) => {\r\n          setName(e.target.value);\r\n        }}\r\n        type=\"text\"\r\n        placeholder=\"Name\"\r\n      />\r\n      <input\r\n        onChange={(e) => {\r\n          setPassword(e.target.value);\r\n        }}\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n      />\r\n      <button\r\n        onClick={() => {\r\n          login();\r\n        }}\r\n      >\r\n        Login\r\n      </button>\r\n      <div>\r\n        <p>Not a user yet?</p>\r\n        <Link to=\"/signup\">Signup</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nexport default function Signup(props) {\r\n  const [name, setName] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [isSigned, setSigned] = useState(false);\r\n\r\n  const signup = () => {\r\n    axios\r\n      .post(\"/user/register\", {\r\n        name: name,\r\n        password: password,\r\n      })\r\n      .then((result) => {\r\n        setSigned(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <h1>Register</h1>\r\n      <form action=\"/\">\r\n        <input\r\n          onChange={(e) => {\r\n            setName(e.target.value);\r\n          }}\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n        />\r\n        <input\r\n          onChange={(e) => {\r\n            setPassword(e.target.value);\r\n          }}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <button type=\"submit \" onClick={() => signup()}>\r\n          Singup\r\n        </button>\r\n      </form>\r\n      {isSigned && <Redirect to=\"/\" />}\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nfunction GameOver({\r\n  currentPlayer,\r\n  setPlayer,\r\n  setTimer,\r\n  setCount,\r\n  setIncorrectCount,\r\n  setQuestionCount,\r\n}) {\r\n  const [leaderBoard, setLeaderBoard] = useState([]);\r\n  const [isPosted, setPosted] = useState(false);\r\n  const [startNewGame, setstartNewGame] = useState(false);\r\n\r\n  const getLeaderboard = async () => {\r\n    const { data } = await axios.get(\"/user/leaderboard\");\r\n    setLeaderBoard(data);\r\n  };\r\n  useEffect(() => {\r\n    getLeaderboard();\r\n  }, []);\r\n\r\n  const postUser = async user => {\r\n    await axios.post(\"/user/score\", {\r\n      name: user.name,\r\n      score: user.score,\r\n    });\r\n    setPosted(true);\r\n    getLeaderboard();\r\n  };\r\n  const playAgain = () => {\r\n    setPlayer({\r\n      name: currentPlayer.name,\r\n      score: 0,\r\n      correct: 0,\r\n      mistakes: 0,\r\n    });\r\n    setstartNewGame(true);\r\n    setTimer(20);\r\n    setCount(0);\r\n    setIncorrectCount(0);\r\n    setQuestionCount(1);\r\n  };\r\n  if (startNewGame) {\r\n    return <Redirect to=\"/game\"></Redirect>;\r\n  }\r\n  return (\r\n    <div>\r\n      {currentPlayer && (\r\n        <div>\r\n          <h1>\r\n            {currentPlayer.name} You scored: {currentPlayer.score} points!\r\n          </h1>\r\n          <p>{currentPlayer.name}, You are the weakest link</p>\r\n          {!isPosted && (\r\n            <button\r\n              onClick={() => {\r\n                postUser(currentPlayer);\r\n              }}\r\n            >\r\n              Post your Score!\r\n            </button>\r\n          )}\r\n          <button onClick={() => playAgain()}>Play another round!</button>\r\n        </div>\r\n      )}\r\n\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Leaderboard</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>score</th>\r\n          </tr>\r\n          {leaderBoard.map((user, i) => {\r\n            return (\r\n              <tr key={i}>\r\n                <td>{user.name}</td>\r\n                <td>{user.score}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameOver;\r\n","import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\n//TODO\r\n\r\nfunction TypeOne({\r\n  updateCounter,\r\n  updateCounterIncorrect,\r\n  setQuestionType,\r\n  setCounter,\r\n  setAnswer,\r\n  stop,\r\n}) {\r\n  const [question, setQuestion] = useState(undefined);\r\n  const [rated, setRated] = useState(false);\r\n  const [next, showNext] = useState(false);\r\n\r\n  const getTypeOneQuestion = async () => {\r\n    const { data } = await axios.get(\"/typeone\");\r\n    setQuestion(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTypeOneQuestion();\r\n  }, []);\r\n  //Added a wrapper to correct function since we need to use updateCounter function which passes from HOME PAGE\r\n  const correctWrapper = () => {\r\n    correct();\r\n    updateCounter();\r\n    showNext(true);\r\n    setAnswer(undefined, 1);\r\n    stop();\r\n  };\r\n\r\n  const inCorrectWrapper = () => {\r\n    inCorrect();\r\n    updateCounterIncorrect();\r\n    showNext(true);\r\n    setAnswer(question.correct, 2);\r\n    stop();\r\n  };\r\n\r\n  let buttons;\r\n  if (!rated) {\r\n    buttons = getButtonList(question, setRated);\r\n  } else {\r\n    buttons = <h1>Thank you for rating</h1>;\r\n  }\r\n\r\n  if (question) {\r\n    let buttonArray = [];\r\n    if (!next) {\r\n      for (let country of question.countries) {\r\n        if (country.country === question.correct) {\r\n          buttonArray.push(\r\n            <button key={getNewKey()} onClick={() => correctWrapper()}>\r\n              {country.country}\r\n            </button>\r\n          );\r\n        } else {\r\n          buttonArray.push(\r\n            <button key={getNewKey()} onClick={() => inCorrectWrapper()}>\r\n              {country.country}\r\n            </button>\r\n          );\r\n        }\r\n      }\r\n    }\r\n    let nextButton = undefined;\r\n    if (next) {\r\n      nextButton = (\r\n        <button\r\n          onClick={() => {\r\n            setQuestionType(1);\r\n            setCounter();\r\n          }}\r\n        >\r\n          next question\r\n        </button>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"TypeOne\">\r\n        <h1>{question.template}</h1>\r\n        {buttonArray}\r\n        <div className=\"rating\">{buttons}</div>\r\n        {nextButton}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"TypeOne\">\r\n        <h1>Question is loading...</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst correct = () => {};\r\n\r\nconst inCorrect = () => {};\r\n\r\nconst getNewKey = () => {\r\n  return 1000000 + Math.floor(Math.random() * 9000000);\r\n};\r\n\r\nconst rateQuestion = async (rate, question, setRated) => {\r\n  await axios.post(\"/savedquestion\", {\r\n    question: question.template,\r\n    column: question.column,\r\n    correct: question.correct,\r\n    rating: rate,\r\n    ratingCounter: 1,\r\n    option1: question.countries[0].country,\r\n    option2: question.countries[1].country,\r\n    option3: question.countries[2].country,\r\n    option4: question.countries[3].country,\r\n  });\r\n  setRated(true);\r\n};\r\n\r\nconst getButtonList = (question, setRated) => {\r\n  let buttonList = [];\r\n  buttonList.push(<h3 key={getNewKey()}>Rate this question!</h3>);\r\n  buttonList.push(\r\n    <button\r\n      key={getNewKey()}\r\n      onClick={() => rateQuestion(1, question, setRated)}\r\n    >\r\n      1\r\n    </button>,\r\n    <button\r\n      key={getNewKey()}\r\n      onClick={() => rateQuestion(2, question, setRated)}\r\n    >\r\n      2\r\n    </button>,\r\n    <button\r\n      key={getNewKey()}\r\n      onClick={() => rateQuestion(3, question, setRated)}\r\n    >\r\n      3\r\n    </button>,\r\n    <button\r\n      key={getNewKey()}\r\n      onClick={() => rateQuestion(4, question, setRated)}\r\n    >\r\n      4\r\n    </button>,\r\n    <button\r\n      key={getNewKey()}\r\n      onClick={() => rateQuestion(5, question, setRated)}\r\n    >\r\n      5\r\n    </button>\r\n  );\r\n  return buttonList;\r\n};\r\n\r\nexport default TypeOne;\r\n","import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nlet correctText;\r\n\r\nfunction TypeTwo({\r\n  updateCounter,\r\n  updateCounterIncorrect,\r\n  setQuestionType,\r\n  setCounter,\r\n  stop,\r\n  setAnswer,\r\n}) {\r\n  //Added a wrapper to correct function since we need to use updateCounter function which passes from HOME PAGE\r\n  const [question, setQuestion] = useState(undefined);\r\n  const [rated, setRated] = useState(undefined);\r\n  const [showButton, setButton] = useState(false);\r\n  const [next, showNext] = useState(false);\r\n\r\n  const getTypeTwoQuestion = async () => {\r\n    const { data } = await axios.get(\"/typetwo\");\r\n    setQuestion(data);\r\n  };\r\n  useEffect(() => {\r\n    getTypeTwoQuestion();\r\n  }, []);\r\n  const correctWrapper = () => {\r\n    correct();\r\n    updateCounter();\r\n    setButton(true);\r\n    showNext(true);\r\n    setAnswer(undefined, 1);\r\n    stop();\r\n  };\r\n\r\n  const inCorrectWrapper = () => {\r\n    inCorrect();\r\n    updateCounterIncorrect();\r\n    setButton(true);\r\n    showNext(true);\r\n    setAnswer(correctText, 2);\r\n    stop();\r\n  };\r\n  if (question) {\r\n    for (let country of question.countries) {\r\n      if (country.country === question.askOn) {\r\n        correctText = country[question.column];\r\n      }\r\n    }\r\n\r\n    let buttonArray = [];\r\n    if (!showButton) {\r\n      for (let country of question.countries) {\r\n        if (country.country === question.askOn) {\r\n          buttonArray.push(\r\n            <button key={getNewKey()} onClick={() => correctWrapper()}>\r\n              {country[question.column]}\r\n            </button>\r\n          );\r\n        } else {\r\n          buttonArray.push(\r\n            <button key={getNewKey()} onClick={() => inCorrectWrapper()}>\r\n              {country[question.column]}\r\n            </button>\r\n          );\r\n        }\r\n      }\r\n    }\r\n    let buttons;\r\n    if (!rated) {\r\n      buttons = getButtonList(question, setRated);\r\n    } else {\r\n      buttons = <h1>Thank you for rating</h1>;\r\n    }\r\n    let nextButton = undefined;\r\n    if (next) {\r\n      nextButton = (\r\n        <button\r\n          onClick={() => {\r\n            setQuestionType(2);\r\n            setCounter();\r\n          }}\r\n        >\r\n          next question\r\n        </button>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"TypeTwo\">\r\n        <h1>\r\n          {question.template} {question.askOn}\r\n        </h1>\r\n        {buttonArray}\r\n        <div className=\"rating\">{buttons}</div>\r\n        {nextButton}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"TypeTwo\">\r\n        <h1>Question is loading...</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst correct = () => {\r\n  //Add correct functionallity\r\n};\r\n\r\nconst inCorrect = () => {\r\n  //Add incorrect functionality\r\n};\r\n\r\nconst getNewKey = () => {\r\n  return 1000000 + Math.floor(Math.random() * 9000000);\r\n};\r\n\r\nconst rateQuestion = async (rate, question, setRated) => {\r\n  await axios.post(\"/savedquestion\", {\r\n    question: question.template + \" \" + question.askOn + \"?\",\r\n    column: question.column,\r\n    correct: question.correct,\r\n    rating: rate,\r\n    ratingCounter: 1,\r\n    option1: question.countries[0][question.column],\r\n    option2: question.countries[1][question.column],\r\n    option3: question.countries[2][question.column],\r\n    option4: question.countries[3][question.column],\r\n  });\r\n  setRated(true);\r\n};\r\n\r\nconst getButtonList = (question, setRated) => {\r\n  let buttonList = [];\r\n  buttonList.push(<h3 key={getNewKey()}>Rate this question!</h3>);\r\n  buttonList.push(\r\n    <button\r\n      key={getNewKey()}\r\n      onClick={() => rateQuestion(1, question, setRated)}\r\n    >\r\n      1\r\n    </button>,\r\n    <button\r\n      key={getNewKey()}\r\n      onClick={() => rateQuestion(2, question, setRated)}\r\n    >\r\n      2\r\n    </button>,\r\n    <button\r\n      key={getNewKey()}\r\n      onClick={() => rateQuestion(3, question, setRated)}\r\n    >\r\n      3\r\n    </button>,\r\n    <button\r\n      key={getNewKey()}\r\n      onClick={() => rateQuestion(4, question, setRated)}\r\n    >\r\n      4\r\n    </button>,\r\n    <button\r\n      key={getNewKey()}\r\n      onClick={() => rateQuestion(5, question, setRated)}\r\n    >\r\n      5\r\n    </button>\r\n  );\r\n  return buttonList;\r\n};\r\nexport default TypeTwo;\r\n","import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nfunction SavedQuestion({\r\n  updateCounter,\r\n  updateCounterIncorrect,\r\n  setQuestionType,\r\n  setCounter,\r\n  stop,\r\n  setAnswer,\r\n}) {\r\n  const [question, setQuestion] = useState(undefined);\r\n  const [rated, setRated] = useState(false);\r\n  const [next, showNext] = useState(false);\r\n\r\n  const getSavedQuestions = async () => {\r\n    const { data } = await axios.get(\"/savedquestion\");\r\n    setQuestion(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSavedQuestions();\r\n  }, []);\r\n\r\n  //Added a wrapper to correct function since we need to use updateCounter function which passes from HOME PAGE\r\n  const correctWrapper = () => {\r\n    setAnswer(undefined, 1);\r\n    correct();\r\n    updateCounter();\r\n    showNext(true);\r\n    stop();\r\n  };\r\n\r\n  const inCorrectWrapper = () => {\r\n    setAnswer(question.correct, 2);\r\n    inCorrect();\r\n    updateCounterIncorrect();\r\n    showNext(true);\r\n    stop();\r\n  };\r\n  if (question) {\r\n    let buttonArray = [];\r\n    let countries = [\r\n      question.option1,\r\n      question.option2,\r\n      question.option3,\r\n      question.option4,\r\n    ];\r\n    for (let country of countries) {\r\n      if (country === question.correct) {\r\n        buttonArray.push(\r\n          <button key={getNewKey()} onClick={() => correctWrapper()}>\r\n            {country}\r\n          </button>\r\n        );\r\n      } else {\r\n        buttonArray.push(\r\n          <button key={getNewKey()} onClick={() => inCorrectWrapper()}>\r\n            {country}\r\n          </button>\r\n        );\r\n      }\r\n    }\r\n\r\n    let buttons;\r\n    if (!rated) {\r\n      buttons = getButtonList(question.id, setRated);\r\n    } else {\r\n      buttons = <h1>Thank you for rating</h1>;\r\n    }\r\n\r\n    let nextButton = undefined;\r\n    if (next) {\r\n      buttonArray = undefined;\r\n      nextButton = (\r\n        <button\r\n          onClick={() => {\r\n            setQuestionType(0);\r\n            setCounter();\r\n          }}\r\n        >\r\n          next question\r\n        </button>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"SavedQuestion\">\r\n        <h1>{question.question}</h1>\r\n        {buttonArray}\r\n        <div className=\"rating\">{buttons}</div>\r\n        {nextButton}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"SavedQuestion\">\r\n        <h1>Question is loading...</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n//getting list of buttons\r\nconst getButtonList = (id, setRated) => {\r\n  let buttonList = [];\r\n  buttonList.push(<h3 key={getNewKey()}>Rate this question!</h3>);\r\n  buttonList.push(\r\n    <button key={getNewKey()} onClick={() => rateQuestion(1, id, setRated)}>\r\n      1\r\n    </button>,\r\n    <button key={getNewKey()} onClick={() => rateQuestion(2, id, setRated)}>\r\n      2\r\n    </button>,\r\n    <button key={getNewKey()} onClick={() => rateQuestion(3, id, setRated)}>\r\n      3\r\n    </button>,\r\n    <button key={getNewKey()} onClick={() => rateQuestion(4, id, setRated)}>\r\n      4\r\n    </button>,\r\n    <button key={getNewKey()} onClick={() => rateQuestion(5, id, setRated)}>\r\n      5\r\n    </button>\r\n  );\r\n  return buttonList;\r\n};\r\n// {key={getNewKey()}\r\nconst correct = () => {\r\n  //Add correct functionallity\r\n};\r\n\r\nconst inCorrect = () => {\r\n  //Add incorrect functionallity\r\n};\r\n\r\nconst getNewKey = () => {\r\n  return 1000000 + Math.floor(Math.random() * 9000000);\r\n};\r\n\r\nconst rateQuestion = async (rate, id, setRated) => {\r\n  await axios.patch(\"/savedquestion\", { id: id, rate: rate });\r\n  setRated(true);\r\n};\r\n\r\nexport default SavedQuestion;\r\n","import TypeOne from \"../questions/TypeOne\";\r\nimport TypeTwo from \"../questions/TypeTwo\";\r\nimport SavedQuestion from \"../questions/SavedQuestion\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport GameOver from \"../gameOver/GameOver\";\r\n\r\nfunction Home({ player, setPlayer }) {\r\n  const [questionType, setQuestionType] = useState(0);\r\n  const [count, setCount] = useState(0);\r\n  const [incorrectCount, setIncorrectCount] = useState(0);\r\n  const [timer, setTimer] = useState(20);\r\n  const [timerState, showTimer] = useState(true);\r\n  const [text, setText] = useState(\"Click above to answer\");\r\n  const [questionCount, setQuestionCount] = useState(1);\r\n\r\n  useInterval(() => {\r\n    if (timerState) {\r\n      if (timer > 0) setTimer(timer - 1);\r\n      else if (timer <= 0) {\r\n        updateCounterIncorrect();\r\n        if (questionType !== 2) {\r\n          setQuestionType(questionType + 1);\r\n        } else {\r\n          setQuestionType(0);\r\n        }\r\n        showTimer(true);\r\n      }\r\n    }\r\n  }, 1000);\r\n\r\n  useEffect(() => {\r\n    const minus = player.correct / 2;\r\n    const num = 20 - minus;\r\n    if (timerState) {\r\n      if (player.correct < 30) {\r\n        return setTimer(num);\r\n      }\r\n      return setTimer(5);\r\n    }\r\n  }, [count]);\r\n  const setAnswer = (correctAnswer, number) => {\r\n    if (number === 0) {\r\n      setText(\"Click above to answer\");\r\n    }\r\n    if (number === 1) {\r\n      setText(\"You are correct\");\r\n    }\r\n    if (number === 2) {\r\n      setText(`The answer is ${correctAnswer}`);\r\n    }\r\n  };\r\n  const updateCounter = () => {\r\n    setPlayer({\r\n      name: player.name,\r\n      score:\r\n        player.score +\r\n        ((1 - (20 - player.correct * 0.5 - timer) / (20 - count * 0.5)) * 70 +\r\n          30),\r\n      correct: player.correct + 1,\r\n      mistakes: player.mistakes,\r\n    });\r\n  };\r\n  const stop = () => {\r\n    showTimer(false);\r\n  };\r\n  const setCounter = () => {\r\n    setCount(count + 1);\r\n    showTimer(true);\r\n    setAnswer(undefined, 0);\r\n    setQuestionCount(questionCount + 1);\r\n  };\r\n  const updateCounterIncorrect = () => {\r\n    setIncorrectCount(incorrectCount + 1);\r\n    setPlayer({\r\n      name: player.name,\r\n      score: player.score,\r\n      correct: player.correct,\r\n      mistakes: player.mistakes + 1,\r\n    });\r\n  };\r\n\r\n  let currentQuestion;\r\n  if (questionType === 0) {\r\n    currentQuestion = (\r\n      <TypeOne\r\n        stop={stop}\r\n        setAnswer={setAnswer}\r\n        updateCounter={updateCounter}\r\n        updateCounterIncorrect={updateCounterIncorrect}\r\n        setQuestionType={setQuestionType}\r\n        setCounter={setCounter}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (questionType === 1) {\r\n    currentQuestion = (\r\n      <TypeTwo\r\n        stop={stop}\r\n        setAnswer={setAnswer}\r\n        updateCounter={updateCounter}\r\n        updateCounterIncorrect={updateCounterIncorrect}\r\n        setQuestionType={setQuestionType}\r\n        setCounter={setCounter}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (questionType === 2) {\r\n    currentQuestion = (\r\n      <SavedQuestion\r\n        stop={stop}\r\n        setAnswer={setAnswer}\r\n        updateCounter={updateCounter}\r\n        updateCounterIncorrect={updateCounterIncorrect}\r\n        setQuestionType={setQuestionType}\r\n        setCounter={setCounter}\r\n      />\r\n    );\r\n  }\r\n  if (incorrectCount < 3) {\r\n    return (\r\n      <div id=\"Login\">\r\n        <h1>{player.name}</h1>\r\n        <h3>Your Score is: {player.score}</h3>\r\n        <h3>Correct answers: {player.correct}</h3>\r\n        <h3>Incorrect answers: {incorrectCount}</h3>\r\n        <h2>question number: {questionCount}</h2>\r\n        {timerState && timer}\r\n        {currentQuestion}\r\n        {text}\r\n      </div>\r\n    );\r\n  } else\r\n    return (\r\n      <GameOver\r\n        currentPlayer={player}\r\n        setPlayer={setPlayer}\r\n        setTimer={setTimer}\r\n        setCount={setCount}\r\n        setIncorrectCount={setIncorrectCount}\r\n        setQuestionCount={setQuestionCount}\r\n      />\r\n    );\r\n}\r\n\r\nfunction useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nfunction First(props) {\r\n  const [toLogin, setToLogin] = useState(false);\r\n  const [toSignUp, setToSignUp] = useState(false);\r\n  return (\r\n    <div className=\"loginAndSignup\">\r\n      {toLogin && <Redirect to=\"/login\"></Redirect>}\r\n      {toSignUp && <Redirect to=\"/signup\"></Redirect>}\r\n      <button\r\n        onClick={() => {\r\n          setToLogin(true);\r\n        }}\r\n      >\r\n        Login\r\n      </button>\r\n      <button\r\n        onClick={() => {\r\n          setToSignUp(true);\r\n        }}\r\n      >\r\n        SignUp\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default First;\r\n","import Login from \"../login/Login\";\r\nimport Signup from \"../login/Signup\";\r\nimport GameOver from \"../gameOver/GameOver\";\r\nimport React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"./Navbar.css\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport Home from \"../Home/Game\";\r\nimport First from \"../Home/First\";\r\n\r\nfunction Navbar() {\r\n  const [player, setPlayer] = useState({});\r\n  const logout = async () => {\r\n    await axios.post(\"/user/logout\", { refToken: Cookies.get(\"refreshToken\") });\r\n    setPlayer({});\r\n    Cookies.remove(\"token\");\r\n    Cookies.remove(\"refreshToken\");\r\n  };\r\n\r\n  return (\r\n    <div id=\"navbar\">\r\n      <Router>\r\n        <nav>\r\n          <ul className=\"navbarlist\">\r\n            <li className=\"navbarli\">\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li className=\"navbarli\">\r\n              <Link to=\"/leaderboard\">Leaderboard</Link>\r\n            </li>\r\n            <li className=\"navbarli logout\" onClick={logout}>\r\n              <Link to=\"/\">Logout</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <First />\r\n          </Route>\r\n          <Route exact path=\"/login\">\r\n            <Login setPlayer={setPlayer} />\r\n          </Route>\r\n          <Route exact path=\"/leaderboard\">\r\n            <GameOver currentPlayer={undefined} />\r\n          </Route>\r\n          <Route exact path=\"/game\">\r\n            <Home player={player} setPlayer={setPlayer} />\r\n          </Route>\r\n          <Route exact path=\"/signup\">\r\n            <Signup />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import Navbar from \"./components/navigation/Navbar\";\r\nimport React from \"react\";\r\nimport \"./App.css\";\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\n\r\naxios.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  async function (error) {\r\n    const refreshToken = Cookies.get(\"refreshToken\");\r\n    const errorRequest = error.response;\r\n    if (errorRequest.status !== 303) {\r\n      return error;\r\n    }\r\n    const originalRequest = error.config;\r\n    try {\r\n      const { accessToken } = await getNewToken(refreshToken);\r\n      Cookies.set(\"token\", `${accessToken}`, { expires: 1 });\r\n      const originalResponse = await axios(originalRequest);\r\n      return originalResponse;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n);\r\naxios.interceptors.request.use(async function (config) {\r\n  const token = await Cookies.get(\"token\");\r\n  config.headers.Authorization = \"bearer \" + token;\r\n  return config;\r\n});\r\nasync function getNewToken(refToken) {\r\n  try {\r\n    const token = await axios.post(\"/user/token\", {\r\n      refToken: refToken,\r\n    });\r\n    return token.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Navbar />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}